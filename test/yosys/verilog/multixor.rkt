#lang yosys

; produced from the following Verilog:
;
; module multixor(
;     input [3:0] x,
;     output result,
; );
;     assign result = (^x);
; endmodule

; SMT-LIBv2 description generated by Yosys 0.8+317 (git sha1 0deaccba, clang 10.0.1 -fPIC -Os)
; yosys-smt2-stdt
; yosys-smt2-module multixor
(declare-datatype |multixor_s| ((|multixor_mk|
  (|multixor_is| Bool)
  (|multixor#0| Bool) ; \x [0]
  (|multixor#1| Bool) ; \x [1]
  (|multixor#2| Bool) ; \x [2]
  (|multixor#3| Bool) ; \x [3]
)))
; yosys-smt2-output result 1
(define-fun |multixor#4| ((state |multixor_s|)) Bool (xor  (|multixor#0| state) (|multixor#1| state) (|multixor#2| state) (|multixor#3| state))) ; \result
(define-fun |multixor_n result| ((state |multixor_s|)) Bool (|multixor#4| state))
; yosys-smt2-input x 4
(define-fun |multixor_n x| ((state |multixor_s|)) (_ BitVec 4) (concat (ite (|multixor#3| state) #b1 #b0) (concat (ite (|multixor#2| state) #b1 #b0) (concat (ite (|multixor#1| state) #b1 #b0) (ite (|multixor#0| state) #b1 #b0)))))
(define-fun |multixor_a| ((state |multixor_s|)) Bool true)
(define-fun |multixor_u| ((state |multixor_s|)) Bool true)
(define-fun |multixor_i| ((state |multixor_s|)) Bool true)
(define-fun |multixor_h| ((state |multixor_s|)) Bool true)
(define-fun |multixor_t| ((state |multixor_s|) (next_state |multixor_s|)) Bool true) ; end of module multixor
; yosys-smt2-topmod multixor
; end of yosys output
